{"version":3,"file":"index.js","sources":["../src/Pagination.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\n\r\ntype RPBPagerState = {\r\n  totalItems: number;\r\n  currentPage: number;\r\n  pagesLength: number;\r\n  pages: number[];\r\n  totalPages: number;\r\n};\r\n\r\ntype RPBClassNamesCustomization = {\r\n  rpbRootClassName?: string;\r\n  rpbItemClassName?: string;\r\n  rpbItemClassNameActive?: string;\r\n  rpbItemClassNameDisable?: string;\r\n  rpbProgressClassName?: string;\r\n  rpbGoItemClassName?: string;\r\n};\r\n\r\ntype RPBPaginationProps = {\r\n  onPageChange: (pageNumber: number) => void;\r\n  currentPage: number;\r\n  totalItems: number;\r\n  itemsPerPage: number;\r\n  startLabel?: string | React.ReactNode;\r\n  prevLabel?: string | React.ReactNode;\r\n  nextLabel?: string | React.ReactNode;\r\n  endLabel?: string | React.ReactNode;\r\n  pageNeighbours?: number;\r\n  withProgressBar?: boolean;\r\n  onlyPageNumbers?: boolean;\r\n  onlyPaginationButtons?: boolean;\r\n  withGoToInput?: boolean;\r\n  customClassNames?: RPBClassNamesCustomization;\r\n};\r\n\r\nexport const Pagination: React.FC<RPBPaginationProps> = ({\r\n  onPageChange,\r\n  currentPage = 1,\r\n  totalItems,\r\n  itemsPerPage = 10,\r\n  startLabel = '<<',\r\n  prevLabel = '<',\r\n  nextLabel = '>',\r\n  endLabel = '>>',\r\n  pageNeighbours = 4,\r\n  withProgressBar = false,\r\n  onlyPageNumbers = false,\r\n  withGoToInput = false,\r\n  onlyPaginationButtons = false,\r\n  customClassNames = {},\r\n}) => {\r\n  const classNames = (classes: Record<string, boolean>): string => {\r\n    return Object.entries(classes)\r\n      .filter(([, value]) => value)\r\n      .map(([key]) => key)\r\n      .join(' ');\r\n  };\r\n\r\n  const [pagiState, setPagiState] = useState<RPBPagerState>();\r\n  const [goToInputValue, setGoToInputValue] = useState<string>('');\r\n\r\n  const styleClassName = {\r\n    rpbRootClassName: customClassNames.rpbRootClassName || 'rpb-root',\r\n    rpbItemClassName: customClassNames.rpbItemClassName || 'rpb-item',\r\n    rpbItemClassNameActive:\r\n      customClassNames.rpbItemClassNameActive || 'rpb-item--active',\r\n    rpbItemClassNameDisable:\r\n      customClassNames.rpbItemClassNameDisable || 'rpb-item--disabled',\r\n    rpbProgressClassName:\r\n      customClassNames.rpbProgressClassName || 'rpb-progress',\r\n    rpbGoItemClassName: customClassNames.rpbGoItemClassName || 'rpb-go-item',\r\n  } as Required<RPBClassNamesCustomization>;\r\n\r\n  /**\r\n   * Set new page when currentPage updates\r\n   */\r\n  useEffect(() => {\r\n    setPage(currentPage);\r\n  }, [currentPage]);\r\n\r\n  const setPage = (page: number): void => {\r\n    // Disable clicking on a non-existent page\r\n    if (\r\n      page < 1 ||\r\n      (pagiState && page > pagiState.totalPages) ||\r\n      typeof page !== 'number' ||\r\n      isNaN(page)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Remove the first rendering, and also cancel the click on the active page\r\n    if (page === currentPage) {\r\n      return;\r\n    }\r\n    // Send current page outside component\r\n    onPageChange(page);\r\n  };\r\n\r\n  const pagesList = useMemo((): number[] => {\r\n    const totalPages: number = Math.ceil(totalItems / itemsPerPage);\r\n\r\n    let startPage: number;\r\n    let endPage: number;\r\n\r\n    if (totalPages <= pageNeighbours * 2 + 1) {\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      if (currentPage <= pageNeighbours) {\r\n        startPage = 1;\r\n        endPage = pageNeighbours * 2 + 1;\r\n      } else if (currentPage + pageNeighbours >= totalPages) {\r\n        startPage = totalPages - pageNeighbours * 2;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - pageNeighbours;\r\n        endPage = currentPage + pageNeighbours;\r\n      }\r\n    }\r\n\r\n    return [...Array(endPage + 1 - startPage).keys()].map((i) => startPage + i);\r\n  }, [totalItems, itemsPerPage, currentPage]);\r\n\r\n  useEffect(() => {\r\n    setPagiState({\r\n      pages: pagesList,\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pagesLength: pagesList.length, // current rendered pages list length\r\n      totalPages: Math.ceil(totalItems / itemsPerPage), // all pages list length\r\n    });\r\n  }, [pagesList]);\r\n\r\n  const onGoToPageSubmitHandle = (): void => {\r\n    const value = Number(goToInputValue);\r\n\r\n    if (pagiState) {\r\n      if (value <= 0) {\r\n        setPage(1);\r\n      } else if (value > pagiState.totalPages) {\r\n        setPage(pagiState.totalPages);\r\n      } else {\r\n        setPage(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (pagiState && totalItems > itemsPerPage) {\r\n    return (\r\n      <nav className={styleClassName.rpbRootClassName}>\r\n        <ul\r\n          id=\"rpb-pagination\"\r\n          aria-label={`Pagination Navigation, Current Page ${pagiState.currentPage}`}>\r\n          {!onlyPageNumbers && (\r\n            <>\r\n              <li>\r\n                <button\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameDisable]:\r\n                      pagiState.currentPage === 1,\r\n                  })}\r\n                  aria-label={'Go to first page'}\r\n                  onClick={() => setPage(1)}>\r\n                  {startLabel}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameDisable]:\r\n                      pagiState.currentPage === 1,\r\n                  })}\r\n                  aria-label={'Go to previous page'}\r\n                  onClick={() => setPage(pagiState.currentPage - 1)}>\r\n                  {prevLabel}\r\n                </button>\r\n              </li>\r\n            </>\r\n          )}\r\n\r\n          {!onlyPaginationButtons &&\r\n            pagiState.pages &&\r\n            pagiState.pages.map((mappedPage, index) => (\r\n              <li key={index}>\r\n                <button\r\n                  aria-label={`Go to Page ${mappedPage}`}\r\n                  aria-current={pagiState.currentPage === mappedPage}\r\n                  onClick={() => setPage(mappedPage)}\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameActive]:\r\n                      pagiState.currentPage === mappedPage,\r\n                  })}>\r\n                  {mappedPage}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          {!onlyPageNumbers && (\r\n            <>\r\n              <li>\r\n                <button\r\n                  onClick={() => setPage(pagiState.currentPage + 1)}\r\n                  aria-label=\"Go to next page\"\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameDisable]:\r\n                      pagiState.currentPage === pagiState.totalPages,\r\n                  })}>\r\n                  {nextLabel}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameDisable]:\r\n                      pagiState.currentPage === pagiState.totalPages,\r\n                  })}\r\n                  aria-label={'Go to last page'}\r\n                  onClick={() => setPage(pagiState.totalPages)}>\r\n                  {endLabel}\r\n                </button>\r\n              </li>\r\n            </>\r\n          )}\r\n          {withGoToInput && (\r\n            <>\r\n              <li>\r\n                <div className={styleClassName.rpbGoItemClassName}>\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={(e) => setGoToInputValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={styleClassName.rpbItemClassName}\r\n                  onClick={onGoToPageSubmitHandle}>\r\n                  Go\r\n                </button>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        {withProgressBar && (\r\n          <div\r\n            role=\"progressbar\"\r\n            aria-valuenow={\r\n              pagiState.currentPage !== 1\r\n                ? Math.round(\r\n                    (pagiState.currentPage / pagiState.totalPages) * 100\r\n                  )\r\n                : 0\r\n            }\r\n            aria-valuemin={0}\r\n            aria-valuemax={100}\r\n            aria-labelledby=\"rpb-pagination\"\r\n            className={styleClassName.rpbProgressClassName}\r\n            style={{\r\n              width:\r\n                pagiState.currentPage !== 1\r\n                  ? Math.round(\r\n                      (pagiState.currentPage / pagiState.totalPages) * 100\r\n                    ) + '%'\r\n                  : 0 + '%',\r\n            }}></div>\r\n        )}\r\n      </nav>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n"],"names":["useState","useEffect","useMemo","React"],"mappings":"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"}