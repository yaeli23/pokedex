{"version":3,"file":"react-headless-pagination.esm.js","sources":["../src/Hooks/usePagination.ts","../src/Pagination/Pagination.tsx"],"sourcesContent":["import React from \"react\";\nimport { IPaginationProps, IUsePagination } from \"../types/types\";\n\nconst usePagination = ({\n  currentPage,\n  setCurrentPage,\n  truncableText = \"...\",\n  truncableClassName = \"\",\n  totalPages,\n  edgePageCount,\n  middlePagesSiblingCount,\n}: IPaginationProps): IUsePagination => {\n  const pages = Array(totalPages)\n    .fill(0)\n    .map((_, i) => i + 1);\n\n  const hasPreviousPage = currentPage > 1;\n  const hasNextPage = currentPage < totalPages;\n\n  const isReachedToFirst = currentPage <= middlePagesSiblingCount;\n  const isReachedToLast = currentPage + middlePagesSiblingCount >= totalPages;\n\n  const middlePages = React.useMemo(() => {\n    const middlePageCount = middlePagesSiblingCount * 2 + 1;\n    if (isReachedToFirst) {\n      return pages.slice(0, middlePageCount);\n    }\n    if (isReachedToLast) {\n      return pages.slice(-middlePageCount);\n    }\n    return pages.slice(\n      currentPage - middlePagesSiblingCount,\n      currentPage + middlePagesSiblingCount + 1,\n    );\n  }, [currentPage, pages]);\n\n  const getAllPreviousPages = () => {\n    return pages.slice(0, middlePages[0] - 1);\n  };\n\n  const previousPages = React.useMemo(() => {\n    if (isReachedToFirst || getAllPreviousPages().length < 1) {\n      return [];\n    }\n    return pages\n      .slice(0, edgePageCount)\n      .filter((p) => !middlePages.includes(p));\n  }, [currentPage, pages]);\n\n  const getAllNextPages = React.useMemo(() => {\n    return pages.slice(\n      middlePages[middlePages.length - 1],\n      pages[pages.length],\n    );\n  }, [pages, middlePages]);\n\n  const nextPages = React.useMemo(() => {\n    if (isReachedToLast) {\n      return [];\n    }\n    if (getAllNextPages.length < 1) {\n      return [];\n    }\n    return pages\n      .slice(pages.length - edgePageCount, pages.length)\n      .filter((p) => !middlePages.includes(p));\n  }, [middlePages, pages]);\n\n  const isPreviousTruncable = React.useMemo(() => {\n    // Is truncable if first value of middlePage is larger than last value of previousPages\n    return middlePages[0] > previousPages[previousPages.length - 1] + 1;\n  }, [previousPages, middlePages]);\n\n  const isNextTruncable = React.useMemo(() => {\n    // Is truncable if last value of middlePage is larger than first value of previousPages\n    return middlePages[middlePages.length - 1] + 1 < nextPages[0];\n  }, [nextPages, middlePages]);\n\n  return {\n    currentPage,\n    setCurrentPage,\n    truncableText,\n    truncableClassName,\n    pages,\n    hasPreviousPage,\n    hasNextPage,\n    previousPages,\n    isPreviousTruncable,\n    middlePages,\n    isNextTruncable,\n    nextPages,\n  };\n};\n\nexport default usePagination;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport usePagination from \"../Hooks/usePagination\";\nimport {\n  IPagination,\n  IPaginationProps,\n  ButtonProps,\n  PageButtonProps,\n} from \"../types/types\";\n\nexport const PrevButton = ({\n  className,\n  children,\n  dataTestId,\n  as = <button />,\n  ...buttonProps\n}: ButtonProps) => {\n  const pagination = React.useContext(PaginationContext);\n  const previous = () => {\n    if (pagination.currentPage + 1 > 1) {\n      pagination.setCurrentPage(pagination.currentPage - 1);\n    }\n  };\n\n  const disabled = pagination.currentPage === 0;\n\n  return (\n    <as.type\n      {...buttonProps}\n      {...as.props}\n      className={classNames(className, as.props.className)}\n      onClick={() => previous()}\n      tabIndex={disabled ? \"-1\" : 0}\n      disabled={disabled}\n      data-testid={dataTestId}\n      onKeyPress={(event: React.KeyboardEvent) => {\n        event.preventDefault();\n        if (event.key === \"Enter\" && !disabled) {\n          previous();\n        }\n      }}\n    >\n      {as.props.children ?? children}\n    </as.type>\n  );\n};\n\nexport const NextButton = ({\n  className,\n  children,\n  dataTestId,\n  as = <button />,\n  ...buttonProps\n}: ButtonProps) => {\n  const pagination = React.useContext(PaginationContext);\n  const next = () => {\n    if (pagination.currentPage + 1 < pagination.pages.length) {\n      pagination.setCurrentPage(pagination.currentPage + 1);\n    }\n  };\n\n  const disabled = pagination.currentPage === pagination.pages.length - 1;\n\n  return (\n    <as.type\n      {...buttonProps}\n      {...as.props}\n      className={classNames(className, as.props.className)}\n      onClick={() => next()}\n      tabIndex={disabled ? \"-1\" : 0}\n      disabled={disabled}\n      data-testid={dataTestId}\n      onKeyPress={(event: React.KeyboardEvent) => {\n        event.preventDefault();\n        if (event.key === \"Enter\" && !disabled) {\n          next();\n        }\n      }}\n    >\n      {as.props.children ?? children}\n    </as.type>\n  );\n};\n\ntype ITruncableElementProps = {\n  prev?: boolean;\n};\n\nconst TruncableElement = ({ prev }: ITruncableElementProps) => {\n  const pagination: IPagination = React.useContext(PaginationContext);\n\n  const {\n    isPreviousTruncable,\n    isNextTruncable,\n    truncableText,\n    truncableClassName,\n  } = pagination;\n\n  return (isPreviousTruncable && prev === true) ||\n    (isNextTruncable && !prev) ? (\n      <li className={truncableClassName || undefined}>{truncableText}</li>\n    ) : null;\n};\n\nexport const PageButton = ({\n  as = <a />,\n  className,\n  dataTestIdActive,\n  dataTestIdInactive,\n  activeClassName,\n  inactiveClassName,\n}: PageButtonProps) => {\n  const pagination: IPagination = React.useContext(PaginationContext);\n\n  const renderPageButton = (page: number) => (\n    <li key={page}>\n      <as.type\n        data-testid={\n          classNames({\n            [`${dataTestIdActive}`]:\n              dataTestIdActive && pagination.currentPage + 1 === page,\n            [`${dataTestIdInactive}-${page}`]:\n              dataTestIdActive && pagination.currentPage + 1 !== page,\n          }) || undefined\n        }\n        tabIndex={0}\n        onKeyPress={(event: React.KeyboardEvent) => {\n          if (event.key === \"Enter\") {\n            pagination.setCurrentPage(page - 1);\n          }\n        }}\n        onClick={() => pagination.setCurrentPage(page - 1)}\n        className={classNames(\n          className,\n          pagination.currentPage + 1 === page\n            ? activeClassName\n            : inactiveClassName,\n        )}\n        {...as.props}\n      >\n        {page}\n      </as.type>\n    </li>\n  );\n\n  return (\n    <>\n      {pagination.previousPages.map(renderPageButton)}\n      <TruncableElement prev />\n      {pagination.middlePages.map(renderPageButton)}\n      <TruncableElement />\n      {pagination.nextPages.map(renderPageButton)}\n    </>\n  );\n};\n\nconst defaultState: IPagination = {\n  currentPage: 0,\n  setCurrentPage: () => { },\n  truncableText: \"...\",\n  truncableClassName: \"\",\n  pages: [],\n  hasPreviousPage: false,\n  hasNextPage: false,\n  previousPages: [],\n  isPreviousTruncable: false,\n  middlePages: [],\n  isNextTruncable: false,\n  nextPages: [],\n};\n\nconst PaginationContext: React.Context<IPagination> =\n  React.createContext<IPagination>(defaultState);\n\nexport const Pagination = ({\n  dataTestId,\n  ...paginationProps\n}: IPaginationProps & { dataTestId?: string }) => {\n  const pagination = usePagination(paginationProps);\n\n  return (\n    <PaginationContext.Provider value={pagination}>\n      <div className={paginationProps.className} data-testid={dataTestId}>\n        {paginationProps.children}\n      </div>\n    </PaginationContext.Provider>\n  );\n};\n\nPagination.PrevButton = PrevButton;\nPagination.NextButton = NextButton;\nPagination.PageButton = PageButton;\n"],"names":["usePagination","currentPage","setCurrentPage","truncableText","truncableClassName","totalPages","edgePageCount","middlePagesSiblingCount","pages","Array","fill","map","_","i","hasPreviousPage","hasNextPage","isReachedToFirst","isReachedToLast","middlePages","React","useMemo","middlePageCount","slice","getAllPreviousPages","previousPages","length","filter","p","includes","getAllNextPages","nextPages","isPreviousTruncable","isNextTruncable","PrevButton","className","children","dataTestId","as","buttonProps","pagination","useContext","PaginationContext","previous","disabled","type","props","classNames","onClick","tabIndex","onKeyPress","event","preventDefault","key","NextButton","next","TruncableElement","prev","undefined","PageButton","dataTestIdActive","dataTestIdInactive","activeClassName","inactiveClassName","renderPageButton","page","defaultState","createContext","Pagination","paginationProps","Provider","value"],"mappings":"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"}