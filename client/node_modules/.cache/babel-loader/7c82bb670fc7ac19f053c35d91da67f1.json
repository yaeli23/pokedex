{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yaelc\\\\PycharmProjects\\\\Pokedex\\\\client\\\\src\\\\components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SweetPagination from \"sweetpagination\"; // export let Pagination = ({pokemons, keys, filter, sort}) => {\n//   const [currentPageData, setCurrentPageData] = useState(new Array(2).fill());\n//   // Example items, to simulate fetching from another resources.\n//       let DisplayAttributes = ({p}) => {\n//\n//         return (\n//             <div>\n//                 <h4> {p.name}:</h4>\n//                 <ul>\n//                     {keys.map((key, index) => {\n//                     return <li key={index}>{key}: {p[key]}</li>\n//                     })}\n//                 </ul>\n//                 <img src={p.image} alt=\"imane\" />\n//             </div>\n//         )\n//     }\n//   return (\n//     <div>\n//       {/*   <SweetPagination*/}\n//       {/*  currentPageData={setCurrentPageData}*/}\n//       {/*  dataPerPage={10}*/}\n//       {/*  getData={pokemons}*/}\n//       {/*  navigation={true}*/}\n//       {/*/>*/}\n//\n//             {pokemons\n//                 // .sort((p1,p2) => sortMethods[sort].method(p1.number, p2.number))\n//                 .map((p, index)=> {\n//                     return <div key={index}>\n//                             <DisplayAttributes p={p}></DisplayAttributes>\n//                         </div>\n//                 })}\n//\n//     </div>\n//   );\n// }\n\nimport { Pagination } from \"react-pagination-bar\";\nimport 'react-pagination-bar/dist/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst posts = [{\n  id: 1,\n  title: 'Post 1'\n}, {\n  id: 2,\n  title: 'Post 2'\n}, {\n  id: 3,\n  title: 'Post 3'\n}, {\n  id: 4,\n  title: 'Post 4'\n}, {\n  id: 5,\n  title: 'Post 5'\n}, {\n  id: 6,\n  title: 'Post 6'\n}, {\n  id: 7,\n  title: 'Post 7'\n}, {\n  id: 8,\n  title: 'Post 8'\n}, {\n  id: 9,\n  title: 'Post 9'\n}, {\n  id: 10,\n  title: 'Post 10'\n}, {\n  id: 11,\n  title: 'Post 11'\n}, {\n  id: 12,\n  title: 'Post 12'\n}];\nexport const MyPagination = () => {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const pagePostsLimit = 3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [posts.slice((currentPage - 1) * pagePostsLimit, (currentPage - 1) * pagePostsLimit + pagePostsLimit).map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.title\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Pagination, {\n      initialPage: currentPage,\n      itemPerPage: pagePostsLimit,\n      onChangePage: pageNumber => setCurrentPage(pageNumber),\n      totalItems: posts.length,\n      pageNeighbours: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyPagination, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n\n_c = MyPagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPagination\");","map":{"version":3,"names":["React","useState","SweetPagination","Pagination","posts","id","title","MyPagination","currentPage","setCurrentPage","pagePostsLimit","slice","map","post","pageNumber","length"],"sources":["C:/Users/yaelc/PycharmProjects/Pokedex/client/src/components/Pagination.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport SweetPagination from \"sweetpagination\";\r\n\r\n\r\n// export let Pagination = ({pokemons, keys, filter, sort}) => {\r\n//   const [currentPageData, setCurrentPageData] = useState(new Array(2).fill());\r\n//   // Example items, to simulate fetching from another resources.\r\n//       let DisplayAttributes = ({p}) => {\r\n//\r\n//         return (\r\n//             <div>\r\n//                 <h4> {p.name}:</h4>\r\n//                 <ul>\r\n//                     {keys.map((key, index) => {\r\n//                     return <li key={index}>{key}: {p[key]}</li>\r\n//                     })}\r\n//                 </ul>\r\n//                 <img src={p.image} alt=\"imane\" />\r\n//             </div>\r\n//         )\r\n//     }\r\n//   return (\r\n//     <div>\r\n//       {/*   <SweetPagination*/}\r\n//       {/*  currentPageData={setCurrentPageData}*/}\r\n//       {/*  dataPerPage={10}*/}\r\n//       {/*  getData={pokemons}*/}\r\n//       {/*  navigation={true}*/}\r\n//       {/*/>*/}\r\n//\r\n//             {pokemons\r\n//                 // .sort((p1,p2) => sortMethods[sort].method(p1.number, p2.number))\r\n//                 .map((p, index)=> {\r\n//                     return <div key={index}>\r\n//                             <DisplayAttributes p={p}></DisplayAttributes>\r\n//                         </div>\r\n//                 })}\r\n//\r\n//     </div>\r\n//   );\r\n// }\r\nimport { Pagination } from \"react-pagination-bar\"\r\nimport 'react-pagination-bar/dist/index.css'\r\n\r\nconst posts = [\r\n  { id: 1, title: 'Post 1' },\r\n  { id: 2, title: 'Post 2' },\r\n  { id: 3, title: 'Post 3' },\r\n  { id: 4, title: 'Post 4' },\r\n  { id: 5, title: 'Post 5' },\r\n  { id: 6, title: 'Post 6' },\r\n  { id: 7, title: 'Post 7' },\r\n  { id: 8, title: 'Post 8' },\r\n  { id: 9, title: 'Post 9' },\r\n  { id: 10, title: 'Post 10' },\r\n  { id: 11, title: 'Post 11' },\r\n  { id: 12, title: 'Post 12' },\r\n];\r\n\r\nexport const MyPagination = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pagePostsLimit = 3;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {posts\r\n        .slice(\r\n          (currentPage - 1) * pagePostsLimit,\r\n          (currentPage - 1) * pagePostsLimit + pagePostsLimit\r\n        )\r\n        .map((post) => {\r\n          return <div key={post.id}>{post.title}</div>;\r\n        })}\r\n      <Pagination\r\n        initialPage={currentPage}\r\n        itemPerPage={pagePostsLimit}\r\n        onChangePage={(pageNumber) => setCurrentPage(pageNumber)}\r\n        totalItems={posts.length}\r\n        pageNeighbours={2}\r\n      />\r\n    </div>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,iBAA5B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAO,qCAAP;;AAEA,MAAMC,KAAK,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CADY,EAEZ;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CAFY,EAGZ;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CAHY,EAIZ;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CAJY,EAKZ;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CALY,EAMZ;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CANY,EAOZ;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CAPY,EAQZ;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CARY,EASZ;EAAED,EAAE,EAAE,CAAN;EAASC,KAAK,EAAE;AAAhB,CATY,EAUZ;EAAED,EAAE,EAAE,EAAN;EAAUC,KAAK,EAAE;AAAjB,CAVY,EAWZ;EAAED,EAAE,EAAE,EAAN;EAAUC,KAAK,EAAE;AAAjB,CAXY,EAYZ;EAAED,EAAE,EAAE,EAAN;EAAUC,KAAK,EAAE;AAAjB,CAZY,CAAd;AAeA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAChC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAMS,cAAc,GAAG,CAAvB;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,WACGN,KAAK,CACHO,KADF,CAEG,CAACH,WAAW,GAAG,CAAf,IAAoBE,cAFvB,EAGG,CAACF,WAAW,GAAG,CAAf,IAAoBE,cAApB,GAAqCA,cAHxC,EAKEE,GALF,CAKOC,IAAD,IAAU;MACb,oBAAO;QAAA,UAAoBA,IAAI,CAACP;MAAzB,GAAUO,IAAI,CAACR,EAAf;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAPF,CADH,eASE,QAAC,UAAD;MACE,WAAW,EAAEG,WADf;MAEE,WAAW,EAAEE,cAFf;MAGE,YAAY,EAAGI,UAAD,IAAgBL,cAAc,CAACK,UAAD,CAH9C;MAIE,UAAU,EAAEV,KAAK,CAACW,MAJpB;MAKE,cAAc,EAAE;IALlB;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAvBM;;GAAMR,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}