{"ast":null,"code":"export let fetchPokemons = (page, pageSize, sort, filter) => {\n  return fetchPokemonsData(page, pageSize, sort, filter).then(data => {\n    if (!data) {\n      return [];\n    }\n\n    let promisesArray = data.pokemons.map(pokemon => {\n      return fetchPokemonImage(pokemon[\"name\"].toLowerCase()).then(image => {\n        return isImgUrl(image).then(exist => {\n          return exist ? { ...pokemon,\n            image\n          } : pokemon;\n        });\n      });\n    });\n    return Promise.all(promisesArray).then(pokemons => {\n      return {\n        pokemons: pokemons,\n        total_size: data.total_size\n      };\n    });\n  });\n};\nexport let fetchPokemonsData = (page, pageSize, sort, filter) => {\n  return fetch(`/api?page=${page}&pageSize=${pageSize}&sort=${sort}&filter=${filter}`).then(res => {\n    if (!res.ok) {\n      throw Error(res.statusText);\n    }\n\n    return res.json();\n  }).catch(err => {\n    console.log('Error occurred while loading image: ' + err);\n  });\n};\n\nlet fetchPokemonImage = name => {\n  return fetch(`/api/icon/${name}`).then(res => {\n    if (!res.ok) {\n      throw Error(res.statusText);\n    }\n\n    return res.text();\n  }).then(data => {\n    return data;\n  }).catch(err => {\n    console.log('Error occurred while loading image: ' + err);\n  });\n};\n\nlet isImgUrl = url => {\n  const img = new Image();\n  img.src = url;\n  return new Promise(resolve => {\n    img.onload = () => resolve(true);\n\n    img.onerror = () => resolve(false);\n  });\n};","map":{"version":3,"names":["fetchPokemons","page","pageSize","sort","filter","fetchPokemonsData","then","data","promisesArray","pokemons","map","pokemon","fetchPokemonImage","toLowerCase","image","isImgUrl","exist","Promise","all","total_size","fetch","res","ok","Error","statusText","json","catch","err","console","log","name","text","url","img","Image","src","resolve","onload","onerror"],"sources":["C:/Users/yaelc/PycharmProjects/Pokedex/client/src/utils/loadData.js"],"sourcesContent":["\r\nexport let fetchPokemons = (page, pageSize, sort, filter) => {\r\n   return fetchPokemonsData(page,pageSize, sort, filter).then(data => {\r\n       if (!data) {\r\n           return []\r\n       }\r\n       let promisesArray = data.pokemons.map( pokemon => {\r\n\r\n            return fetchPokemonImage(pokemon[\"name\"].toLowerCase()).then(image => {\r\n                return isImgUrl(image).then((exist) => {\r\n                    return exist ? {...pokemon, image}: pokemon\r\n                })\r\n            });\r\n       })\r\n       return Promise.all(promisesArray).then(pokemons => {\r\n           return {pokemons: pokemons, total_size: data.total_size}\r\n       });\r\n  })\r\n}\r\n\r\nexport let fetchPokemonsData = ( page,pageSize, sort, filter) => {\r\n    return fetch(`/api?page=${page}&pageSize=${pageSize}&sort=${sort}&filter=${filter}`)\r\n    .then((res) => {\r\n        if (!res.ok) {\r\n            throw Error(res.statusText)\r\n        }\r\n\r\n        return res.json()\r\n    })\r\n    .catch((err) => {\r\n        console.log('Error occurred while loading image: ' + err)\r\n    })\r\n}\r\n\r\nlet fetchPokemonImage = (name) => {\r\n\r\n    return fetch(`/api/icon/${name}`)\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                throw Error(res.statusText)\r\n            }\r\n            return res.text()\r\n        })\r\n        .then((data) => {\r\n            return data\r\n        })\r\n        .catch((err) => {\r\n            console.log('Error occurred while loading image: ' + err)\r\n        })\r\n}\r\n\r\nlet isImgUrl = (url) => {\r\n    const img = new Image();\r\n    img.src = url;\r\n    return new Promise((resolve) => {\r\n        img.onload = () => resolve(true);\r\n        img.onerror = () => resolve(false);\r\n    });\r\n}"],"mappings":"AACA,OAAO,IAAIA,aAAa,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,IAAjB,EAAuBC,MAAvB,KAAkC;EAC1D,OAAOC,iBAAiB,CAACJ,IAAD,EAAMC,QAAN,EAAgBC,IAAhB,EAAsBC,MAAtB,CAAjB,CAA+CE,IAA/C,CAAoDC,IAAI,IAAI;IAC/D,IAAI,CAACA,IAAL,EAAW;MACP,OAAO,EAAP;IACH;;IACD,IAAIC,aAAa,GAAGD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAmBC,OAAO,IAAI;MAE7C,OAAOC,iBAAiB,CAACD,OAAO,CAAC,MAAD,CAAP,CAAgBE,WAAhB,EAAD,CAAjB,CAAiDP,IAAjD,CAAsDQ,KAAK,IAAI;QAClE,OAAOC,QAAQ,CAACD,KAAD,CAAR,CAAgBR,IAAhB,CAAsBU,KAAD,IAAW;UACnC,OAAOA,KAAK,GAAG,EAAC,GAAGL,OAAJ;YAAaG;UAAb,CAAH,GAAwBH,OAApC;QACH,CAFM,CAAP;MAGH,CAJM,CAAP;IAKJ,CAPmB,CAApB;IAQA,OAAOM,OAAO,CAACC,GAAR,CAAYV,aAAZ,EAA2BF,IAA3B,CAAgCG,QAAQ,IAAI;MAC/C,OAAO;QAACA,QAAQ,EAAEA,QAAX;QAAqBU,UAAU,EAAEZ,IAAI,CAACY;MAAtC,CAAP;IACH,CAFM,CAAP;EAGJ,CAfO,CAAP;AAgBF,CAjBM;AAmBP,OAAO,IAAId,iBAAiB,GAAG,CAAEJ,IAAF,EAAOC,QAAP,EAAiBC,IAAjB,EAAuBC,MAAvB,KAAkC;EAC7D,OAAOgB,KAAK,CAAE,aAAYnB,IAAK,aAAYC,QAAS,SAAQC,IAAK,WAAUC,MAAO,EAAtE,CAAL,CACNE,IADM,CACAe,GAAD,IAAS;IACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MACT,MAAMC,KAAK,CAACF,GAAG,CAACG,UAAL,CAAX;IACH;;IAED,OAAOH,GAAG,CAACI,IAAJ,EAAP;EACH,CAPM,EAQNC,KARM,CAQCC,GAAD,IAAS;IACZC,OAAO,CAACC,GAAR,CAAY,yCAAyCF,GAArD;EACH,CAVM,CAAP;AAWH,CAZM;;AAcP,IAAIf,iBAAiB,GAAIkB,IAAD,IAAU;EAE9B,OAAOV,KAAK,CAAE,aAAYU,IAAK,EAAnB,CAAL,CACFxB,IADE,CACIe,GAAD,IAAS;IACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MACT,MAAMC,KAAK,CAACF,GAAG,CAACG,UAAL,CAAX;IACH;;IACD,OAAOH,GAAG,CAACU,IAAJ,EAAP;EACH,CANE,EAOFzB,IAPE,CAOIC,IAAD,IAAU;IACZ,OAAOA,IAAP;EACH,CATE,EAUFmB,KAVE,CAUKC,GAAD,IAAS;IACZC,OAAO,CAACC,GAAR,CAAY,yCAAyCF,GAArD;EACH,CAZE,CAAP;AAaH,CAfD;;AAiBA,IAAIZ,QAAQ,GAAIiB,GAAD,IAAS;EACpB,MAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;EACAD,GAAG,CAACE,GAAJ,GAAUH,GAAV;EACA,OAAO,IAAIf,OAAJ,CAAamB,OAAD,IAAa;IAC5BH,GAAG,CAACI,MAAJ,GAAa,MAAMD,OAAO,CAAC,IAAD,CAA1B;;IACAH,GAAG,CAACK,OAAJ,GAAc,MAAMF,OAAO,CAAC,KAAD,CAA3B;EACH,CAHM,CAAP;AAIH,CAPD"},"metadata":{},"sourceType":"module"}