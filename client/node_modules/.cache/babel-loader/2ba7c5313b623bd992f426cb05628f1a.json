{"ast":null,"code":"export let loadPokemonsSize = () => {\n  return fetch(`/api/size`).then(res => {\n    if (!res.ok) {\n      throw Error(res.statusText);\n    }\n\n    return res.text();\n  }).then(data => {\n    return parseInt(data);\n  }).catch(err => {\n    console.log('Error occurred while loading pokemons: ' + err);\n  });\n};\n\nlet loadImage = name => {\n  return fetch(`/api/icon/${name}`).then(res => {\n    if (!res.ok) {\n      throw Error(res.statusText);\n    }\n\n    return res.text();\n  }).then(data => {\n    return data;\n  }).catch(err => {\n    console.log('Error occurred while loading image: ' + err);\n  });\n}; // export let loadPokemonsWithImages = () => {\n//        return loadAllPokemons()\n//       .then(data => {\n//         let promisesArray = data.map( pokemon => {\n//             return loadImage(pokemon[\"name\"].toLowerCase()).then(image => {\n//                 return {...pokemon, image};\n//             });\n//         })\n//         return Promise.all(promisesArray);\n//       })\n// }\n\n\nexport let loadPartialPokemonsWithImages = count => {\n  return loadPartialPokemons(count).then(data => {\n    let promisesArray = data.map(pokemon => {\n      return loadImage(pokemon[\"name\"].toLowerCase()).then(image => {\n        return { ...pokemon,\n          image\n        };\n      });\n    });\n    return Promise.all(promisesArray);\n  });\n};\nexport let loadPartialPokemons = (page, pageSize) => {\n  return fetch(`/api?page=${page}&pageSize=${5}`).then(res => {\n    if (!res.ok) {\n      throw Error(res.statusText);\n    }\n\n    return res.json();\n  }).then(data => {\n    return data;\n  }).catch(err => {\n    console.log('Error occurred while loading image: ' + err);\n  });\n};","map":{"version":3,"names":["loadPokemonsSize","fetch","then","res","ok","Error","statusText","text","data","parseInt","catch","err","console","log","loadImage","name","loadPartialPokemonsWithImages","count","loadPartialPokemons","promisesArray","map","pokemon","toLowerCase","image","Promise","all","page","pageSize","json"],"sources":["C:/Users/yaelc/PycharmProjects/Pokedex/client/src/utils/loadData.js"],"sourcesContent":["export let loadPokemonsSize = () => {\r\n    return fetch(`/api/size`)\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                throw Error(res.statusText)\r\n            }\r\n            return res.text()\r\n        })\r\n        .then((data) => {\r\n            return  parseInt(data)\r\n        })\r\n        .catch((err) => {\r\n            console.log('Error occurred while loading pokemons: ' + err)\r\n        })\r\n}\r\n\r\nlet loadImage = (name) => {\r\n\r\n    return fetch(`/api/icon/${name}`)\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                throw Error(res.statusText)\r\n            }\r\n            return res.text()\r\n        })\r\n        .then((data) => {\r\n            return data\r\n        })\r\n        .catch((err) => {\r\n            console.log('Error occurred while loading image: ' + err)\r\n        })\r\n}\r\n\r\n\r\n// export let loadPokemonsWithImages = () => {\r\n//        return loadAllPokemons()\r\n//       .then(data => {\r\n//         let promisesArray = data.map( pokemon => {\r\n//             return loadImage(pokemon[\"name\"].toLowerCase()).then(image => {\r\n//                 return {...pokemon, image};\r\n//             });\r\n//         })\r\n//         return Promise.all(promisesArray);\r\n//       })\r\n// }\r\nexport let loadPartialPokemonsWithImages = (count) => {\r\n       return loadPartialPokemons(count)\r\n      .then(data => {\r\n        let promisesArray = data.map( pokemon => {\r\n            return loadImage(pokemon[\"name\"].toLowerCase()).then(image => {\r\n                return {...pokemon, image};\r\n            });\r\n        })\r\n        return Promise.all(promisesArray);\r\n      })\r\n}\r\nexport let loadPartialPokemons = (page,pageSize ) => {\r\n        return fetch(`/api?page=${page}&pageSize=${5}`)\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                throw Error(res.statusText)\r\n            }\r\n            return res.json()\r\n        })\r\n        .then((data) => {\r\n            return data\r\n        })\r\n        .catch((err) => {\r\n            console.log('Error occurred while loading image: ' + err)\r\n        })\r\n}\r\n"],"mappings":"AAAA,OAAO,IAAIA,gBAAgB,GAAG,MAAM;EAChC,OAAOC,KAAK,CAAE,WAAF,CAAL,CACFC,IADE,CACIC,GAAD,IAAS;IACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MACT,MAAMC,KAAK,CAACF,GAAG,CAACG,UAAL,CAAX;IACH;;IACD,OAAOH,GAAG,CAACI,IAAJ,EAAP;EACH,CANE,EAOFL,IAPE,CAOIM,IAAD,IAAU;IACZ,OAAQC,QAAQ,CAACD,IAAD,CAAhB;EACH,CATE,EAUFE,KAVE,CAUKC,GAAD,IAAS;IACZC,OAAO,CAACC,GAAR,CAAY,4CAA4CF,GAAxD;EACH,CAZE,CAAP;AAaH,CAdM;;AAgBP,IAAIG,SAAS,GAAIC,IAAD,IAAU;EAEtB,OAAOd,KAAK,CAAE,aAAYc,IAAK,EAAnB,CAAL,CACFb,IADE,CACIC,GAAD,IAAS;IACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MACT,MAAMC,KAAK,CAACF,GAAG,CAACG,UAAL,CAAX;IACH;;IACD,OAAOH,GAAG,CAACI,IAAJ,EAAP;EACH,CANE,EAOFL,IAPE,CAOIM,IAAD,IAAU;IACZ,OAAOA,IAAP;EACH,CATE,EAUFE,KAVE,CAUKC,GAAD,IAAS;IACZC,OAAO,CAACC,GAAR,CAAY,yCAAyCF,GAArD;EACH,CAZE,CAAP;AAaH,CAfD,C,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAIK,6BAA6B,GAAIC,KAAD,IAAW;EAC/C,OAAOC,mBAAmB,CAACD,KAAD,CAAnB,CACPf,IADO,CACFM,IAAI,IAAI;IACZ,IAAIW,aAAa,GAAGX,IAAI,CAACY,GAAL,CAAUC,OAAO,IAAI;MACrC,OAAOP,SAAS,CAACO,OAAO,CAAC,MAAD,CAAP,CAAgBC,WAAhB,EAAD,CAAT,CAAyCpB,IAAzC,CAA8CqB,KAAK,IAAI;QAC1D,OAAO,EAAC,GAAGF,OAAJ;UAAaE;QAAb,CAAP;MACH,CAFM,CAAP;IAGH,CAJmB,CAApB;IAKA,OAAOC,OAAO,CAACC,GAAR,CAAYN,aAAZ,CAAP;EACD,CARO,CAAP;AASN,CAVM;AAWP,OAAO,IAAID,mBAAmB,GAAG,CAACQ,IAAD,EAAMC,QAAN,KAAoB;EAC7C,OAAO1B,KAAK,CAAE,aAAYyB,IAAK,aAAY,CAAE,EAAjC,CAAL,CACNxB,IADM,CACAC,GAAD,IAAS;IACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MACT,MAAMC,KAAK,CAACF,GAAG,CAACG,UAAL,CAAX;IACH;;IACD,OAAOH,GAAG,CAACyB,IAAJ,EAAP;EACH,CANM,EAON1B,IAPM,CAOAM,IAAD,IAAU;IACZ,OAAOA,IAAP;EACH,CATM,EAUNE,KAVM,CAUCC,GAAD,IAAS;IACZC,OAAO,CAACC,GAAR,CAAY,yCAAyCF,GAArD;EACH,CAZM,CAAP;AAaP,CAdM"},"metadata":{},"sourceType":"module"}