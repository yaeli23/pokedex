{"ast":null,"code":"let isImgUrl = url => {\n  const img = new Image();\n  img.src = url;\n  return new Promise(resolve => {\n    img.onload = () => resolve(true);\n\n    img.onerror = () => resolve(false);\n  });\n};\n\nexport let loadPokemonsWithImages = (page, pageSize, sort, filter) => {\n  return loadPokemons(page, pageSize, sort, filter).then(data => {\n    if (!data) {\n      return [];\n    }\n\n    let promisesArray = data.pokemons.map(pokemon => {\n      return loadImage(pokemon[\"name\"].toLowerCase()).then(image => {\n        return isImgUrl(image).then(exist => {\n          return exist ? { ...pokemon,\n            image\n          } : pokemon;\n        });\n      });\n    });\n    return Promise.all(promisesArray).then(pokemons => {\n      return {\n        pokemons: pokemons,\n        total_size: data.total_size\n      };\n    });\n  });\n};\n\nlet loadImage = name => {\n  return fetch(`/api/icon/${name}`).then(res => {\n    if (!res.ok) {\n      throw Error(res.statusText);\n    }\n\n    return res.text();\n  }).then(data => {\n    return data;\n  }).catch(err => {\n    console.log('Error occurred while loading image: ' + err);\n  });\n};\n\nexport let loadPokemons = (page, pageSize, sort, filter) => {\n  return fetch(`/api?page=${page}&pageSize=${pageSize}&sort=${sort}&filter=${filter}`).then(res => {\n    if (!res.ok) {\n      throw Error(res.statusText);\n    }\n\n    return res.json();\n  }).catch(err => {\n    console.log('Error occurred while loading image: ' + err);\n  });\n};","map":{"version":3,"names":["isImgUrl","url","img","Image","src","Promise","resolve","onload","onerror","loadPokemonsWithImages","page","pageSize","sort","filter","loadPokemons","then","data","promisesArray","pokemons","map","pokemon","loadImage","toLowerCase","image","exist","all","total_size","name","fetch","res","ok","Error","statusText","text","catch","err","console","log","json"],"sources":["C:/Users/yaelc/PycharmProjects/Pokedex/client/src/utils/loadData.js"],"sourcesContent":["\r\nlet isImgUrl = (url) => {\r\n  const img = new Image();\r\n  img.src = url;\r\n  return new Promise((resolve) => {\r\n    img.onload = () => resolve(true);\r\n    img.onerror = () => resolve(false);\r\n  });\r\n}\r\n\r\nexport let loadPokemonsWithImages = (page,pageSize, sort, filter) => {\r\n       return loadPokemons(page,pageSize, sort, filter).then(data => {\r\n           if (!data) {\r\n               return []\r\n           }\r\n           let promisesArray = data.pokemons.map( pokemon => {\r\n\r\n                return loadImage(pokemon[\"name\"].toLowerCase()).then(image => {\r\n                    return isImgUrl(image).then((exist) => {\r\n                        return exist ? {...pokemon, image}: pokemon\r\n                    })\r\n\r\n                });\r\n           })\r\n           return Promise.all(promisesArray).then(pokemons => {\r\n               return {pokemons: pokemons, total_size: data.total_size}\r\n           });\r\n      })\r\n}\r\nlet loadImage = (name) => {\r\n\r\n    return fetch(`/api/icon/${name}`)\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                throw Error(res.statusText)\r\n            }\r\n            return res.text()\r\n        })\r\n        .then((data) => {\r\n            return data\r\n        })\r\n        .catch((err) => {\r\n            console.log('Error occurred while loading image: ' + err)\r\n        })\r\n}\r\n\r\nexport let loadPokemons = ( page,pageSize, sort, filter) => {\r\n        return fetch(`/api?page=${page}&pageSize=${pageSize}&sort=${sort}&filter=${filter}`)\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                throw Error(res.statusText)\r\n            }\r\n\r\n            return res.json()\r\n        })\r\n        .catch((err) => {\r\n            console.log('Error occurred while loading image: ' + err)\r\n        })\r\n}\r\n"],"mappings":"AACA,IAAIA,QAAQ,GAAIC,GAAD,IAAS;EACtB,MAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;EACAD,GAAG,CAACE,GAAJ,GAAUH,GAAV;EACA,OAAO,IAAII,OAAJ,CAAaC,OAAD,IAAa;IAC9BJ,GAAG,CAACK,MAAJ,GAAa,MAAMD,OAAO,CAAC,IAAD,CAA1B;;IACAJ,GAAG,CAACM,OAAJ,GAAc,MAAMF,OAAO,CAAC,KAAD,CAA3B;EACD,CAHM,CAAP;AAID,CAPD;;AASA,OAAO,IAAIG,sBAAsB,GAAG,CAACC,IAAD,EAAMC,QAAN,EAAgBC,IAAhB,EAAsBC,MAAtB,KAAiC;EAC9D,OAAOC,YAAY,CAACJ,IAAD,EAAMC,QAAN,EAAgBC,IAAhB,EAAsBC,MAAtB,CAAZ,CAA0CE,IAA1C,CAA+CC,IAAI,IAAI;IAC1D,IAAI,CAACA,IAAL,EAAW;MACP,OAAO,EAAP;IACH;;IACD,IAAIC,aAAa,GAAGD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAmBC,OAAO,IAAI;MAE7C,OAAOC,SAAS,CAACD,OAAO,CAAC,MAAD,CAAP,CAAgBE,WAAhB,EAAD,CAAT,CAAyCP,IAAzC,CAA8CQ,KAAK,IAAI;QAC1D,OAAOvB,QAAQ,CAACuB,KAAD,CAAR,CAAgBR,IAAhB,CAAsBS,KAAD,IAAW;UACnC,OAAOA,KAAK,GAAG,EAAC,GAAGJ,OAAJ;YAAaG;UAAb,CAAH,GAAwBH,OAApC;QACH,CAFM,CAAP;MAIH,CALM,CAAP;IAMJ,CARmB,CAApB;IASA,OAAOf,OAAO,CAACoB,GAAR,CAAYR,aAAZ,EAA2BF,IAA3B,CAAgCG,QAAQ,IAAI;MAC/C,OAAO;QAACA,QAAQ,EAAEA,QAAX;QAAqBQ,UAAU,EAAEV,IAAI,CAACU;MAAtC,CAAP;IACH,CAFM,CAAP;EAGJ,CAhBO,CAAP;AAiBN,CAlBM;;AAmBP,IAAIL,SAAS,GAAIM,IAAD,IAAU;EAEtB,OAAOC,KAAK,CAAE,aAAYD,IAAK,EAAnB,CAAL,CACFZ,IADE,CACIc,GAAD,IAAS;IACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MACT,MAAMC,KAAK,CAACF,GAAG,CAACG,UAAL,CAAX;IACH;;IACD,OAAOH,GAAG,CAACI,IAAJ,EAAP;EACH,CANE,EAOFlB,IAPE,CAOIC,IAAD,IAAU;IACZ,OAAOA,IAAP;EACH,CATE,EAUFkB,KAVE,CAUKC,GAAD,IAAS;IACZC,OAAO,CAACC,GAAR,CAAY,yCAAyCF,GAArD;EACH,CAZE,CAAP;AAaH,CAfD;;AAiBA,OAAO,IAAIrB,YAAY,GAAG,CAAEJ,IAAF,EAAOC,QAAP,EAAiBC,IAAjB,EAAuBC,MAAvB,KAAkC;EACpD,OAAOe,KAAK,CAAE,aAAYlB,IAAK,aAAYC,QAAS,SAAQC,IAAK,WAAUC,MAAO,EAAtE,CAAL,CACNE,IADM,CACAc,GAAD,IAAS;IACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MACT,MAAMC,KAAK,CAACF,GAAG,CAACG,UAAL,CAAX;IACH;;IAED,OAAOH,GAAG,CAACS,IAAJ,EAAP;EACH,CAPM,EAQNJ,KARM,CAQCC,GAAD,IAAS;IACZC,OAAO,CAACC,GAAR,CAAY,yCAAyCF,GAArD;EACH,CAVM,CAAP;AAWP,CAZM"},"metadata":{},"sourceType":"module"}